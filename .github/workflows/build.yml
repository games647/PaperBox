# Automatically build, run unit and integration tests to detect errors early (CI provided by GitHub)
# including making pull requests review easier

# Human-readable name in the actions tab
name: Java CI

# Build on every pull request regardless of the branch
# Wiki: https://help.github.com/en/actions/reference/events-that-trigger-workflows
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  JDK_DISTRIBUTION: 'temurin'
  JAVA_VERSION: 17

  JIB_VERSION: '0.9.0'
  JIB_CLI_DOWNLOAD: "https://github.com/GoogleContainerTools/jib/releases/download/v${{ env.JIB_VERSION }}-cli/jib-jre-${{ env.JIB_VERSION }}.zip"
  JIB_CHECKSUM: 'c0f47017f1218a223f51228cc69fe9d7793e600d8a05b11e4dbdba0dee6bfc11'

  BASE_IMAGE: 'gcr.io/distroless/java17-debian11:nonroot'

jobs:
  # job id
  build_and_test:

    # Environment image - always use the newest OS
    runs-on: ubuntu-latest

    # Run steps
    steps:
      # Pull changes
      - name: Checkout Paper
        uses: actions/checkout@v2.4.0
        with:
          repository: PaperMC/Paper
          path: Paper
          ref: master

      # Cache only if the action is not run locally using act
      # https://github.com/nektos/act/issues/285#issuecomment-987550101
      - name: Set up JDK
        uses: actions/setup-java@v2.5.0
        if: ${{ !env.ACT }}
        with:
          distribution: ${{ env.JDK_DISTRIBUTION }}
          java-version: ${{ env.JAVA_VERSION }}
          cache: 'gradle'

      # Setup Java
      - name: Set up JDK
        uses: actions/setup-java@v2.5.0
        if: ${{ env.ACT }}
        with:
          distribution: ${{ env.JDK_DISTRIBUTION }}
          java-version: ${{ env.JAVA_VERSION }}

      - name: Download JIB
        run: |
          wget --timestamping "$JIB_CLI_DOWNLOAD" --output-document jib-cli.zip
          # Security: verify the checksum with a pre-downloaded value to detect arbitary artifact replacement
          # and in transport modifications
          echo "$JIB_CHECKSUM jib-cli.zip" | sha256sum -c -

      - name: Patch and build
        run: |
            git config --global user.email "no-reply@github.com"
            git config --global user.name "Github Actions"
            cd Paper
            ./gradlew applyPatches --stacktrace
            ./gradlew createReobfPaperclipJar --stacktrace

      - name: Build Container
        run: |
          ./jib-$JIB_VERSION/bin/jib jar \
            --from=${{ env.BASE_IMAGE }} \
            --jvm-flags=-server,-Dcom.mojang.eula.agree=true \
            --expose=25565 \
            --target docker://test-paperclip Paper/build/libs/paper-paperclip*.jar
